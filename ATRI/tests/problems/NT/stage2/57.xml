<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
    <info>
    (hold 0) (plate 15) (at 0 5)
    (sort 1 worktable) (size 1 big) (at 1 1)
    (sort 2 closet) (size 2 big) (at 2 2) (type 2 container) (closed 2)
    (sort 3 microwave) (size 3 big) (at 3 3) (type 3 container) (opened 3)
    (sort 4 plant) (size 4 big) (at 4 4)
    (sort 5 sofa) (size 5 big) (at 5 5)
    (sort 6 human) (size 6 big) (at 6 6)
    (sort 7 teapoy) (size 7 big) (at 7 7)
    (sort 8 can) (size 8 small) (color 8 red) 
    (sort 9 can) (size 9 small) (color 9 green) 
    (sort 10 can) (size 10 small) (color 10 black) 
    (sort 11 can) (size 11 small) (color 11 white) 
    (sort 12 bottle) (size 12 small) (color 12 red) 
    (sort 13 bottle) (size 13 small) (color 13 blue) 
    (sort 14 book) (size 14 small) (color 14 red) 
    (sort 15 book) (size 15 small) (color 15 yellow)
    </info>
    <mis>
    (at 12 1) (inside 13 2) (at 14 5)
    </mis>
    <err>
        <r>(inside 8 2) (at 9 4) (inside 10 3) (at 11 7)</r>
        <w>(at 8 1) (at 9 4) (at 10 6) (inside 11 2)</w>
    </err>
    <extra>
    </extra>
</env>
<instr>
(:ins
    (:cons_notnot (:info (plate X) (:cond (sort X book) (color X yellow))))
    (:cons_not (:info (on X Y) (:cond (sort X can) (color X black) (sort Y worktable))))
    (:task (close X) (:cond (sort X microwave)))
    (:task (puton X Y) (:cond (sort X can) (sort Y worktable)))
    (:task (puton X Y) (:cond (sort X bottle) (color X blue) (sort Y worktable)))
    (:task (putin X Y) (:cond (sort X bottle) (color X red) (sort Y microwave)))
    (:task (puton X Y) (:cond (sort X book) (sort Y worktable)))
)
</instr>
<nl>
There must be a yellow book on plate.
The black can must not be on the worktable.
Close door of microwave.
Put a can on worktable.
Put the blue bottle on worktable.
Put the red bottle in microwave.
Put a book on worktable.
</nl>
</test>
