<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="off" err="off" ans="off">
    <info>
    (hold 0) (plate 18) (at 0 8)
    (sort 1 human) (size 1 big) (at 1 1)
    (sort 2 desk) (size 2 big) (at 2 2)
    (sort 3 television) (size 3 big) (at 3 3)
    (sort 4 chair) (size 4 big) (at 4 4)
    (sort 5 bed) (size 5 big) (at 5 5)
    (sort 6 refrigerator) (size 6 big) (at 6 6) (type 6 container)
    (sort 7 closet) (size 7 big) (at 7 7) (type 7 container) (closed 7)
    (sort 8 cupboard) (size 8 big) (at 8 8) (type 8 container) (opened 8)
    (sort 9 microwave) (size 9 big) (at 9 9) (type 9 container)
    (sort 10 book) (size 10 small) (color 10 yellow) (at 10 2)
    (sort 11 book) (size 11 small) (color 11 green)
    (sort 12 book) (size 12 small) (color 12 white) 
    (sort 13 bottle) (size 13 small) (color 13 green) 
    (sort 14 bottle) (size 14 small) (color 14 blue) 
    (sort 15 cup) (size 15 small) (color 15 black) 
    (sort 16 cup) (size 16 small) (color 16 white) 
    (sort 17 remotecontrol) (size 17 small) (color 17 white)
    (sort 18 can) (size 18 small) (color 18 white)
    </info>
    <mis>
    (inside 11 6) (at 14 2) (at 15 5)
    </mis>
    <err>
        <r>(inside 12 7) (at 13 3) (at 16 1) (inside 17 8)</r>
        <w>(inside 12 9) (at 13 4) (inside 16 9) (at 17 4)</w>
    </err>
    <extra>
    (closed 6) (opened 9)
    </extra>
</env>
<instr>
(:ins
    (:info (closed X) (:cond (sort X refrigerator) (type X container)))
    (:info (opened X) (:cond (sort X microwave) (type X container)))
    (:cons_not (:info (opened X) (:cond (sort X refrigerator) (type X container))))
    (:cons_not (:task (goto X) (:cond (sort X desk))))
    (:task (puton X Y) (:cond (sort X cup) (color X white) (sort Y television)))
    (:task (puton X Y) (:cond (sort X bottle) (color X green) (sort Y cupboard) (type Y container)))
    (:task (puton X Y) (:cond (sort X book) (sort Y chair) (color X green)))
    (:task (puton X Y) (:cond (sort X book) (color X white) (sort Y cupboard) (type Y container)))
    (:task (putin X Y) (:cond (sort X can) (color X white) (sort Y refrigerator) (type Y container)))
    (:task (give human X) (:cond (sort X remotecontrol) (color X white)))
)
</instr>
<nl>
The door of refrigerator is closed.
The door of microwave is opened.
The refrigerator must not be opened.
Do not go to the desk.
Please put the white cup on television.
Please put the green bottle on cupboard.
Please put the green book on the chair.
Please put the white book on the cupboard.
Please put the white can in the refrigerator.
Give the white remotecontrol to human.
</nl>
</test>
