<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="off" ans="off">
	<info>
	(plate 0) (hold 0) (at 0 9)
	(sort 1 cupboard) (size 1 big) (at 1 1) (type 1 container) (opened 1)
	(sort 2 worktable) (size 2 big) (at 2 2)
	(sort 3 couch) (size 3 big) (at 3 3)
	(sort 4 workspace) (size 4 big) (at 4 4)
	(sort 6 refrigerator) (size 6 big) (at 6 6) (type 6 container) (opened 6)
	(sort 7 couch) (size 7 big) (at 7 7)
	(sort 8 desk) (size 8 big) (at 8 8)
	(sort 9 bed) (size 9 big) (at 9 9)
	(sort 10 sofa) (size 10 big) (at 10 10)
	(sort 11 book) (size 11 small) (color 11 blue) (at 11 8)
	(sort 12 can) (size 12 small) (color 12 green) (inside 12 1)
	(sort 13 bottle) (size 13 small) (color 13 red) (at 13 2)
	(sort 14 remotecontrol) (size 14 small) (color 14 black)
	(sort 15 can) (size 15 small)(color 15 white) (at 15 7)
	(sort 16 remotecontrol) (size 16 small) (color 16 red)
	(sort 17 can) (size 17 small) (color 17 yellow)
	(sort 18 cup) (size 18 small) (color 18 green) (at 18 3)
	(sort 19 remotecontrol) (size 19 small) (color 19 white)
	(sort 20 bottle) (size 20 small) (color 20 black) (at 20 7)
	(sort 21 can) (size 21 small) (color 21 red) (at 21 10)
	</info>
	<mis>
	(at 19 3)
	</mis>
	<err>
	<r>
	(at 14 7)
	(at 16 6)
	(at 17 2)
	</r>
	<w>
	(at 14 9)
	(at 16 8)
	(at 17 4)
	</w>
	</err>
	
</env>
<instr>(:ins 
(:task (takeout X Y) (:cond (color X green) (sort X can) (type Y container) (sort Y cupboard)))
(:task (pickup X) (:cond (color X red) (sort X remotecontrol)))
(:task (putin X Y) (:cond (color X blue) (sort X book) (sort Y cupboard)))
(:cons_notnot (:info (on X Y) (:cond (color X red) (sort X can) (sort Y sofa))))
)
</instr>
<nl>
Take out the green can from cupboard.
Pick up the red remotecontrol.
Put the blue book in cupboard.
The red can must be on sofa.
</nl>
</test>
